{"noir_version":"1.0.0-beta.12+9a5b3695b42e391fa27c48e87b9bbb07523d664d","hash":"8550232358825562112","abi":{"parameters":[{"name":"pub_key_x","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"pub_key_y","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"signature","type":{"kind":"array","length":64,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"hashed_message","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"}],"return_type":null,"error_types":{}},"bytecode":"H4sIAAAAAAAA/6WXZ09bZwBGr0uS0r33Ik0H3Ta2we4KNB10772AxJTunT3I3ntvlF+aPPJFOkEnn3Il5FcHyUJI73POrRTdZ+bSz4XyXLn001N+5umdwyrCrhHWI2yesPnCFgi7VlivsOuEXS/sBmE3CrtJ2M3CbhF2q7DbhN0u7A5hdwq7S9jdwu4Rdq+w+4TdL+wBYQ8Ke0jYw8IeEdYnbKGwR4UtEvaYsMeFPSHsSWH9wp4S9rSwZ4Q9K+w5Yc8Le0FYVVhN2ICwurCGsKawQWFDwlrC2sJeFPaSsJeFvSLsVWGLhQ0LGxH2mrAlwl4X9oawN4W9JWxU2NvC3hH2rrD3hL0v7ANhHwr7SNjHwj4R9qmwz4R9LuwLYV8K+0rY18K+EfatsO+EfS/sB2E/ChsTNi5sQthSYcuEdYRNCvtJ2JSwn4X9IuxXYb8J+13YH8L+FPaXsL+F/SPsX2H/Cftf2HJhK4StFLZK2Gpha4StFbZO2HphG4RNC9sobJOwzcK2CNsqbJuw7cJ2CNspbJew3cL2CNsrbJ+w/cIOCDso7JCww8KOCDsq7Jiw48JOCDsp7JSw08LOCDsr7Jyw82ALys8CrILz3PeN2TPfL+bP+b7ZM98jenHmewPfF/iewPcDvhfwfYDvAex/dj97n53PvmfXs+fZ8ex3djt7nZ3OPmeXs8fZ4X04L8SZvb0IZ/Y1u5o9zY7ux5ndzF5mJ7OP2cXsYXYw+5fdy95l57Jv2bXsWXYs+5Xdyl5lp7JP2aXsUXboMM4jOLM3l+DMvmRXsifZkaM4sxvZi+xE9iG7kD3IDmT/sfvYe+w89h27jj3HjmO/sdvYa+w09hm7jD3GDhvDeRxn9tZSnNlX7Cr2FDtqCmd2E3uJncQ+Yhexh9hB7B92D3uHncO+YdewZ9gx7Bd2C3uFncI+YZewR9gh0zhvxJm9wc5gX7Ar2BPsiB04sxvYC+wE9gG7gD3ADqD/6X36np6n3+l1+pwep7/pbfqanqaf6WX6eNbDM8XlT6X8HC4/q1f31GbwXfXqYKPRGRro1Oq18epAe6LVrDaaE4OtWqvWbDWXDbTq9U6r0RpqT7SHqu1ao96pTTbb9cnyy/K3zSu/a3rO35xW6Cl/nyZIC8w2QJwf18fxcXucHpfH4XF3nB1Xx9Fxc5wcF8fBcW+cG9fGsXFrnBqXxqF9RdeZcWUcGTfGiXFhHNhfdJ0X18VxcVucFpfFYXFXnBVXxVFxU5wUF8VBcU+cE9fEMXFLnBKXLC7/tyNF1xVxRNwQJ8QFccBo0d38bH02PtueTc+WZ8Oz3dnsbHU2OtucTc4WZ4OzvdncbG02NtuaTc2WZkPHiu5mZiuzkdnGbGK2MBs4VXQ3L1uXjcu2ZdOyZdmwbFc2K1uVjco2ZZOyRdmgbE82J1uTjcm2ZFOyJRvK/3+e6aK7HdmMbEU2ItuQTcgWZANy93Pnc9dzx3O3c6dzl3OHc3dzZ3NXc0dzN3MncxdzB3P3cudy13LHcrdyp84XV34uAhOXt558FwAA","debug_symbols":"jZDBCsMgEET/Zc8ektII9VdKCcZsgiAqGy2UkH/vJsQ2ORR6GnfHN+LM0GOXx9b6IUyg7jN0ZJ2zY+uC0ckGz9t5EVDGNhEir+DgMxU1oU+gfHZOwFO7vF2aovabJk3sVgLQ96wcOFiH62kRX7r6jTbyusPyKj948zcvm1vh5Zl/8KSNpdOPoZYVqFqw1qAuyxpMVncO9z6G7M2hnvSKxSkFRgoG+0y4Bm8eP/UG","file_map":{"50":{"source":"// use dep::ecrecover;\n// fn main(\n//     pub_key_x: [u8; 32],\n//     pub_key_y: [u8; 32],\n//     signature: [u8; 64],\n//     hashed_message: pub [u8; 32],\n//     expected_address: pub Field,\n// ) {\n//     let address = ecrecover::ecrecover(pub_key_x, pub_key_y, signature, hashed_message);\n//     assert(address == expected_address, \"Address does not match expected address\");\n// }\n\nuse dep::std::ecdsa_secp256k1;\n\nfn main(\n    pub_key_x: [u8; 32],\n    pub_key_y: [u8; 32],\n    signature: [u8; 64],\n    hashed_message: pub [u8; 32],\n) {\n    let isValid =\n        ecdsa_secp256k1::verify_signature(pub_key_x, pub_key_y, signature, hashed_message);\n    assert(isValid);\n}\n","path":"/home/othnapcalx/Documents/Noir/zk_sigRecover/src/main.nr"}},"names":["main"],"brillig_names":[]}